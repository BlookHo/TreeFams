.content
  %h2 Результаты поиска
  %table.tmp_table
    - @uniq_profiles_pairs.each do |key, value|
      %tr
        %td.grey
          Для
        %td
          - p0 = Profile.where(id: key).first
          = p0.try(:name).try(:name) || "не найден"
          = "(id: #{key})"
        %td.grey
          в вашем дереве мы нашли
        %td
          - value.each do |k,v|
            - p1 = Profile.where(id: v).first
            = p1.try(:name).try(:name) || "не найден"
            = "(id: #{v})"

            %span.grey в дереве
            - p2 = User.where(id: k).first.profile
            = p2.try(:name).try(:name) || "не найден"
            = "(id: #{k})"

            = link_to 'Объединиться', connection_of_trees_path( user_id_to_connect: k, certain_koeff: @certain_koeff), class: :handshake
            %hr

          .grey= value


  -# %div{style: "margin-top:50px;"}
  -#   - if @search_res.empty?
  -#     %h1.yellow-title Совпадений не найдено
  -#   - else
  -#     %h1.yellow-title Возможно, мы нашли ваших родственников:
  -#
  -#     #search-results
  -#       %ul
  -#         - @search_results_data.each do |data|
  -#           - user = User.find(data.user_id)
  -#           %li
  -#             %h1
  -#               = data.user_name
  -#               - if data.connected
  -#                 %strong (объединенное дерево)
  -#
  -#               %span
  -#                 Содержит
  -#                 - counter = data.results.map{|p| p.results_count}.inject(:+)
  -#                 = counter
  -#                 = Russian.p(counter, "общего", "общих", "общих")
  -#                 с вами
  -#                 = Russian.p(counter, "родственника", "родственников", "родственников")
  -#                 в своем древе
  -#
  -#
  -#               = link_to 'Объединиться', connection_of_trees_path( user_id_to_connect: user.id), class: :handshake
  -#             %ul
  -#               - data.results.each do |profile|
  -#                 %li
  -#                   %h3
  -#                     Для
  -#                     = YandexInflect.inflections(profile.profile_name)[1]["__content__"].mb_chars.capitalize
  -#                     из вашего дерева найдены:
  -#                   -# %h5
  -#                   -#   Содержит
  -#                   -#   = profile.results_count
  -#                   -#   = Russian.p(profile.results_count, "общего", "общих", "общих")
  -#                   -#   = Russian.p(profile.results_count, "родственника", "родственников", "родственников")
  -#
  -#                   %ul
  -#                     - profile.results.each do |path|
  -#                       - path_id = Digest::MD5.hexdigest(path.to_s)
  -#                       %ul
  -#                         - path.each_with_index do |step, index|
  -#                           %li
  -#                             - if step[:relation] != 0
  -#                               = sex_id_to_human(step[:prev_sex_id])
  -#                               = relation_to_human(step[:relation])
  -#                             = link_to step[:profile].to_name, "/search/circle_path/#{path_id}/#{data.user_id}/#{step[:profile].id},#{step[:relation]}", remote: true
  -#                             - if (index + 1) == path.size
  -#                               .span.whois
  -#                                 Вероятно, это
  -#                                 = relation_to_profile(@search_results_relations.find {|r| r[step[:profile].id] }.try(:[], step[:profile].id) )
  -#                             - else
  -#                               %span
  -#                                 = fa_icon('arrow-right')
  -#                         .search-path-table{id: "search-path-table-#{path_id}", style: 'display:none;'}
  -#                           = render 'search_circle_path_table', circle: user.profile.circle(user.id), author: user, path_id: path_id
